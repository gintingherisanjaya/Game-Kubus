{
  "version": 3,
  "sources": ["../../vite/dist/node/index.js"],
  "sourcesContent": ["import { i as isInNodeModules } from './chunks/dep-2b82a1ce.js';\r\nexport { b as build, e as buildErrorMessage, v as createFilter, x as createLogger, c as createServer, g as defineConfig, f as formatPostcssSourceMap, k as getDepOptimizationConfig, m as isDepsOptimizerEnabled, z as isFileServingAllowed, l as loadConfigFromFile, A as loadEnv, u as mergeAlias, q as mergeConfig, n as normalizePath, o as optimizeDeps, a as preprocessCSS, p as preview, j as resolveBaseUrl, h as resolveConfig, B as resolveEnvPrefix, d as resolvePackageData, r as resolvePackageEntry, y as searchForWorkspaceRoot, w as send, s as sortUserPlugins, t as transformWithEsbuild } from './chunks/dep-2b82a1ce.js';\r\nexport { VERSION as version } from './constants.js';\r\nexport { version as esbuildVersion } from 'esbuild';\r\nexport { VERSION as rollupVersion } from 'rollup';\r\nimport 'node:fs';\r\nimport 'node:fs/promises';\r\nimport 'node:path';\r\nimport 'node:url';\r\nimport 'node:util';\r\nimport 'node:perf_hooks';\r\nimport 'node:module';\r\nimport 'tty';\r\nimport 'path';\r\nimport 'fs';\r\nimport 'events';\r\nimport 'assert';\r\nimport 'util';\r\nimport 'net';\r\nimport 'url';\r\nimport 'http';\r\nimport 'stream';\r\nimport 'os';\r\nimport 'child_process';\r\nimport 'node:os';\r\nimport 'node:child_process';\r\nimport 'node:crypto';\r\nimport 'node:dns';\r\nimport 'crypto';\r\nimport 'node:buffer';\r\nimport 'module';\r\nimport 'node:assert';\r\nimport 'node:process';\r\nimport 'node:v8';\r\nimport 'worker_threads';\r\nimport 'node:http';\r\nimport 'node:https';\r\nimport 'zlib';\r\nimport 'buffer';\r\nimport 'https';\r\nimport 'tls';\r\nimport 'querystring';\r\nimport 'node:readline';\r\nimport 'node:zlib';\r\n\r\n// This file will be built for both ESM and CJS. Avoid relying on other modules as possible.\r\n// copy from constants.ts\r\nconst CSS_LANGS_RE = \r\n// eslint-disable-next-line regexp/no-unused-capturing-group\r\n/\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\r\nconst isCSSRequest = (request) => CSS_LANGS_RE.test(request);\r\n// Use splitVendorChunkPlugin() to get the same manualChunks strategy as Vite 2.7\r\n// We don't recommend using this strategy as a general solution moving forward\r\n// splitVendorChunk is a simple index/vendor strategy that was used in Vite\r\n// until v2.8. It is exposed to let people continue to use it in case it was\r\n// working well for their setups.\r\n// The cache needs to be reset on buildStart for watch mode to work correctly\r\n// Don't use this manualChunks strategy for ssr, lib mode, and 'umd' or 'iife'\r\nclass SplitVendorChunkCache {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    reset() {\r\n        this.cache = new Map();\r\n    }\r\n}\r\nfunction splitVendorChunk(options = {}) {\r\n    const cache = options.cache ?? new SplitVendorChunkCache();\r\n    return (id, { getModuleInfo }) => {\r\n        if (isInNodeModules(id) &&\r\n            !isCSSRequest(id) &&\r\n            staticImportedByEntry(id, getModuleInfo, cache.cache)) {\r\n            return 'vendor';\r\n        }\r\n    };\r\n}\r\nfunction staticImportedByEntry(id, getModuleInfo, cache, importStack = []) {\r\n    if (cache.has(id)) {\r\n        return cache.get(id);\r\n    }\r\n    if (importStack.includes(id)) {\r\n        // circular deps!\r\n        cache.set(id, false);\r\n        return false;\r\n    }\r\n    const mod = getModuleInfo(id);\r\n    if (!mod) {\r\n        cache.set(id, false);\r\n        return false;\r\n    }\r\n    if (mod.isEntry) {\r\n        cache.set(id, true);\r\n        return true;\r\n    }\r\n    const someImporterIs = mod.importers.some((importer) => staticImportedByEntry(importer, getModuleInfo, cache, importStack.concat(id)));\r\n    cache.set(id, someImporterIs);\r\n    return someImporterIs;\r\n}\r\nfunction splitVendorChunkPlugin() {\r\n    const caches = [];\r\n    function createSplitVendorChunk(output, config) {\r\n        const cache = new SplitVendorChunkCache();\r\n        caches.push(cache);\r\n        const build = config.build ?? {};\r\n        const format = output?.format;\r\n        if (!build.ssr && !build.lib && format !== 'umd' && format !== 'iife') {\r\n            return splitVendorChunk({ cache });\r\n        }\r\n    }\r\n    return {\r\n        name: 'vite:split-vendor-chunk',\r\n        config(config) {\r\n            let outputs = config?.build?.rollupOptions?.output;\r\n            if (outputs) {\r\n                outputs = Array.isArray(outputs) ? outputs : [outputs];\r\n                for (const output of outputs) {\r\n                    const viteManualChunks = createSplitVendorChunk(output, config);\r\n                    if (viteManualChunks) {\r\n                        if (output.manualChunks) {\r\n                            if (typeof output.manualChunks === 'function') {\r\n                                const userManualChunks = output.manualChunks;\r\n                                output.manualChunks = (id, api) => {\r\n                                    return userManualChunks(id, api) ?? viteManualChunks(id, api);\r\n                                };\r\n                            }\r\n                            else {\r\n                                // else, leave the object form of manualChunks untouched, as\r\n                                // we can't safely replicate rollup handling.\r\n                                // eslint-disable-next-line no-console\r\n                                console.warn(\"(!) the `splitVendorChunk` plugin doesn't have any effect when using the object form of `build.rollupOptions.output.manualChunks`. Consider using the function form instead.\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            output.manualChunks = viteManualChunks;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return {\r\n                    build: {\r\n                        rollupOptions: {\r\n                            output: {\r\n                                manualChunks: createSplitVendorChunk({}, config),\r\n                            },\r\n                        },\r\n                    },\r\n                };\r\n            }\r\n        },\r\n        buildStart() {\r\n            caches.forEach((cache) => cache.reset());\r\n        },\r\n    };\r\n}\r\n\r\nexport { isCSSRequest, splitVendorChunk, splitVendorChunkPlugin };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,qBAA0C;AAE1C,qBAAO;AACP,sBAAO;AACP,uBAAO;AACP,sBAAO;AACP,uBAAO;AACP,6BAAO;AACP,yBAAO;AACP,iBAAO;AACP,kBAAO;AACP,gBAAO;AACP,oBAAO;AACP,oBAAO;AACP,kBAAO;AACP,iBAAO;AACP,iBAAO;AACP,kBAAO;AACP,oBAAO;AACP,gBAAO;AACP,2BAAO;AACP,qBAAO;AACP,gCAAO;AACP,yBAAO;AACP,sBAAO;AACP,oBAAO;AACP,yBAAO;AACP,oBAAO;AACP,yBAAO;AACP,0BAAO;AACP,qBAAO;AACP,4BAAO;AACP,uBAAO;AACP,wBAAO;AACP,kBAAO;AACP,oBAAO;AACP,mBAAO;AACP,iBAAO;AACP,yBAAO;AACP,2BAAO;AACP,uBAAO;AAIP,IAAM;AAAA;AAAA,EAEN;AAAA;AACA,IAAM,eAAe,CAAC,YAAY,aAAa,KAAK,OAAO;AAQ3D,IAAM,wBAAN,MAA4B;AAAA,EACxB,cAAc;AACV,SAAK,QAAQ,oBAAI,IAAI;AAAA,EACzB;AAAA,EACA,QAAQ;AACJ,SAAK,QAAQ,oBAAI,IAAI;AAAA,EACzB;AACJ;AACA,SAAS,iBAAiB,UAAU,CAAC,GAAG;AACpC,QAAM,QAAQ,QAAQ,SAAS,IAAI,sBAAsB;AACzD,SAAO,CAAC,IAAI,EAAE,cAAc,MAAM;AAC9B,QAAI,gBAAgB,EAAE,KAClB,CAAC,aAAa,EAAE,KAChB,sBAAsB,IAAI,eAAe,MAAM,KAAK,GAAG;AACvD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AACA,SAAS,sBAAsB,IAAI,eAAe,OAAO,cAAc,CAAC,GAAG;AACvE,MAAI,MAAM,IAAI,EAAE,GAAG;AACf,WAAO,MAAM,IAAI,EAAE;AAAA,EACvB;AACA,MAAI,YAAY,SAAS,EAAE,GAAG;AAE1B,UAAM,IAAI,IAAI,KAAK;AACnB,WAAO;AAAA,EACX;AACA,QAAM,MAAM,cAAc,EAAE;AAC5B,MAAI,CAAC,KAAK;AACN,UAAM,IAAI,IAAI,KAAK;AACnB,WAAO;AAAA,EACX;AACA,MAAI,IAAI,SAAS;AACb,UAAM,IAAI,IAAI,IAAI;AAClB,WAAO;AAAA,EACX;AACA,QAAM,iBAAiB,IAAI,UAAU,KAAK,CAAC,aAAa,sBAAsB,UAAU,eAAe,OAAO,YAAY,OAAO,EAAE,CAAC,CAAC;AACrI,QAAM,IAAI,IAAI,cAAc;AAC5B,SAAO;AACX;AACA,SAAS,yBAAyB;AAC9B,QAAM,SAAS,CAAC;AAChB,WAAS,uBAAuB,QAAQ,QAAQ;AAC5C,UAAM,QAAQ,IAAI,sBAAsB;AACxC,WAAO,KAAK,KAAK;AACjB,UAAMA,SAAQ,OAAO,SAAS,CAAC;AAC/B,UAAM,SAAS,iCAAQ;AACvB,QAAI,CAACA,OAAM,OAAO,CAACA,OAAM,OAAO,WAAW,SAAS,WAAW,QAAQ;AACnE,aAAO,iBAAiB,EAAE,MAAM,CAAC;AAAA,IACrC;AAAA,EACJ;AACA,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO,QAAQ;AA/GvB;AAgHY,UAAI,WAAU,4CAAQ,UAAR,mBAAe,kBAAf,mBAA8B;AAC5C,UAAI,SAAS;AACT,kBAAU,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AACrD,mBAAW,UAAU,SAAS;AAC1B,gBAAM,mBAAmB,uBAAuB,QAAQ,MAAM;AAC9D,cAAI,kBAAkB;AAClB,gBAAI,OAAO,cAAc;AACrB,kBAAI,OAAO,OAAO,iBAAiB,YAAY;AAC3C,sBAAM,mBAAmB,OAAO;AAChC,uBAAO,eAAe,CAAC,IAAI,QAAQ;AAC/B,yBAAO,iBAAiB,IAAI,GAAG,KAAK,iBAAiB,IAAI,GAAG;AAAA,gBAChE;AAAA,cACJ,OACK;AAID,wBAAQ,KAAK,8KAA8K;AAAA,cAC/L;AAAA,YACJ,OACK;AACD,qBAAO,eAAe;AAAA,YAC1B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OACK;AACD,eAAO;AAAA,UACH,OAAO;AAAA,YACH,eAAe;AAAA,cACX,QAAQ;AAAA,gBACJ,cAAc,uBAAuB,CAAC,GAAG,MAAM;AAAA,cACnD;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,IACA,aAAa;AACT,aAAO,QAAQ,CAAC,UAAU,MAAM,MAAM,CAAC;AAAA,IAC3C;AAAA,EACJ;AACJ;",
  "names": ["build"]
}
